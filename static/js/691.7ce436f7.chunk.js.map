{"version":3,"file":"static/js/691.7ce436f7.chunk.js","mappings":"8SACMA,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAEMC,EAAY,mCAAG,6FACpBC,EADoB,sCACiBH,GADjB,SAEHC,EAAAA,GAAAA,IAAUE,GAFP,cAEpBC,EAFoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qDAOZC,EAAY,mCAAG,WAAMC,GAAN,gFACpBL,EADoB,iBACJK,EADI,oBACUR,GADV,SAEHC,EAAAA,GAAAA,IAAUE,GAFP,cAEpBC,EAFoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZI,EAAQ,mCAAG,WAAMD,GAAN,gFAChBL,EADgB,iBACAK,EADA,4BACsBR,GADtB,SAECC,EAAAA,GAAAA,IAAUE,GAFX,cAEhBC,EAFgB,yBAIfA,EAASC,KAAKK,MAJC,2CAAH,sDAORC,EAAU,mCAAG,WAAMH,GAAN,gFAClBL,EADkB,iBACFK,EADE,4BACoBR,GADpB,SAEDC,EAAAA,GAAAA,IAAUE,GAFT,cAElBC,EAFkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVO,EAAS,mCAAG,WAAMC,GAAN,gFACjBV,EADiB,gCACcH,EADd,kBAC+Ba,EAD/B,uDAGAZ,EAAAA,GAAAA,IAAUE,GAHV,cAGjBC,EAHiB,yBAKhBA,EAASC,MALO,2CAAH,qD,2KChCTS,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAOD,EAAAA,GAAAA,KAAH,kEAKJE,EAAQF,EAAAA,GAAAA,MAAH,sIAQLG,EAASH,EAAAA,GAAAA,OAAH,mPAaNI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,sJ,SC8BvB,EA1De,WACb,OAAwCM,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAEXf,EAAQS,EAAaO,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gGAESjB,EAFT,kEAK2BD,EAAAA,EAAAA,IAAUC,GALrC,QAKUT,EALV,SAQMsB,EAAatB,EAASE,SAR5B,sJADc,uBAAC,WAAD,wBAedyB,CAAalB,EACd,GAAE,CAACA,IAOJ,OACE,2BACE,UAACC,EAAD,YACE,UAACE,EAAD,CAAMgB,SARS,SAAAC,GACnBA,EAAEC,iBACFX,EAAgB,CAAEV,MAAOoB,EAAEE,OAAO,GAAGC,OACtC,EAKK,WACE,SAACnB,EAAD,CAAOoB,KAAK,OAAOC,KAAK,QAAQC,aAAc1B,KAC9C,SAACK,EAAD,CAAQmB,KAAK,SAAb,uBAGDZ,IACC,0BACE,wBACGA,EAAUe,KAAI,SAAAC,GACb,OACE,yBACE,SAACtB,EAAD,CAAYuB,GAAE,UAAKD,EAAMjC,IAAMmC,MAAO,CAAEC,KAAMjB,GAA9C,SACGc,EAAMI,kBAFFJ,EAAMjC,GAMlB,YAOd,C","sources":["API.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '5dfa5b901aee38fd7ab0c698d7fb5f4c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const PER_PAGE = 12;\n\nexport const getTrandings = async () => {\n  const url = `/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data.results;\n};\n\nexport const getMovieInfo = async id => {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data;\n};\n\nexport const getCasts = async id => {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data.cast;\n};\n\nexport const getRewiews = async id => {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const url = `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n\n  const response = await axios.get(url);\n\n  return response.data;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieWrap = styled.div`\n  padding: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin: 0;\n  padding: 2px 8px;\n  border: 1px solid #66666650;\n  border-radius: 6px;\n  font-size: 24px;\n`;\n\nexport const Button = styled.button`\n  background-color: #e7e7e7;\n  color: black;\n  border: none;\n  border-radius: 6px;\n  height: 34px;\n  padding: 0 16px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { getMovies } from 'API';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MovieWrap, Form, Input, Button, StyledLink } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [movieList, setMovieList] = useState('');\n  const location = useLocation();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    async function searchMovies() {\n      try {\n        if (!query) {\n          return;\n        }\n        const response = await getMovies(query);\n\n        if (response) {\n          setMovieList(response.results);\n        }\n      } catch {\n      } finally {\n      }\n    }\n    searchMovies(query);\n  }, [query]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target[0].value });\n  };\n\n  return (\n    <main>\n      <MovieWrap>\n        <Form onSubmit={onFormSubmit}>\n          <Input type=\"text\" name=\"query\" defaultValue={query} />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n\n        {movieList && (\n          <div>\n            <ul>\n              {movieList.map(movie => {\n                return (\n                  <li key={movie.id}>\n                    <StyledLink to={`${movie.id}`} state={{ from: location }}>\n                      {movie.original_title}\n                    </StyledLink>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n      </MovieWrap>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","getTrandings","url","response","data","results","getMovieInfo","id","getCasts","cast","getRewiews","getMovies","query","MovieWrap","styled","Form","Input","Button","StyledLink","Link","useSearchParams","searchParams","setSearchParams","useState","movieList","setMovieList","location","useLocation","get","useEffect","searchMovies","onSubmit","e","preventDefault","target","value","type","name","defaultValue","map","movie","to","state","from","original_title"],"sourceRoot":""}