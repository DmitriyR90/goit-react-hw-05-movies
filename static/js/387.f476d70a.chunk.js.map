{"version":3,"file":"static/js/387.f476d70a.chunk.js","mappings":"8SACMA,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAEMC,EAAY,mCAAG,6FACpBC,EADoB,sCACiBH,GADjB,SAEHC,EAAAA,GAAAA,IAAUE,GAFP,cAEpBC,EAFoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qDAOZC,EAAY,mCAAG,WAAMC,GAAN,gFACpBL,EADoB,iBACJK,EADI,oBACUR,GADV,SAEHC,EAAAA,GAAAA,IAAUE,GAFP,cAEpBC,EAFoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZI,EAAQ,mCAAG,WAAMD,GAAN,gFAChBL,EADgB,iBACAK,EADA,4BACsBR,GADtB,SAECC,EAAAA,GAAAA,IAAUE,GAFX,cAEhBC,EAFgB,yBAIfA,EAASC,KAAKK,MAJC,2CAAH,sDAORC,EAAU,mCAAG,WAAMH,GAAN,gFAClBL,EADkB,iBACFK,EADE,4BACoBR,GADpB,SAEDC,EAAAA,GAAAA,IAAUE,GAFT,cAElBC,EAFkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVO,EAAS,mCAAG,WAAMC,GAAN,gFACjBV,EADiB,gCACcH,EADd,kBAC+Ba,EAD/B,uDAGAZ,EAAAA,GAAAA,IAAUE,GAHV,cAGjBC,EAHiB,yBAKhBA,EAASC,MALO,2CAAH,qD,iJCjCTS,E,OAAaC,GAAAA,IAAH,8E,SC6CvB,EAzCgB,WACd,IAAQP,GAAOQ,EAAAA,EAAAA,MAAPR,GACR,GAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACIC,EAAeF,EAAQG,OAkB3B,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BX,EAAAA,EAAAA,IAAWH,GAFtC,QAEUJ,EAFV,SAKMe,EAAWf,EAASE,SAL1B,gDAQIiB,MAAM,mCARV,sGADc,uBAAC,WAAD,wBAadC,CAAchB,EACf,GAAE,CAACA,KAGF,SAACM,EAAD,UACoB,IAAjBM,GACC,wBACGF,EAAQO,KAAI,SAAAC,GACX,OACE,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOlB,GAKnB,OAGH,qEAIP,C","sources":["API.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '5dfa5b901aee38fd7ab0c698d7fb5f4c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const PER_PAGE = 12;\n\nexport const getTrandings = async () => {\n  const url = `/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data.results;\n};\n\nexport const getMovieInfo = async id => {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data;\n};\n\nexport const getCasts = async id => {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data.cast;\n};\n\nexport const getRewiews = async id => {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const url = `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n\n  const response = await axios.get(url);\n\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const ReviewWrap = styled.div`\n  border-bottom: 2px solid grey;\n  padding: 0 16px;\n`;\n","import { useEffect } from 'react';\nimport { getRewiews } from 'API';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewWrap } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  let totalResults = reviews.length;\n\n  useEffect(() => {\n    async function getAllRewiews() {\n      try {\n        const response = await getRewiews(id);\n\n        if (response) {\n          setReviews(response.results);\n        }\n      } catch {\n        alert('Something went wrong. Try again');\n      } finally {\n      }\n    }\n    getAllRewiews(id);\n  }, [id]);\n\n  return (\n    <ReviewWrap>\n      {totalResults !== 0 ? (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h3>{review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </ReviewWrap>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","getTrandings","url","response","data","results","getMovieInfo","id","getCasts","cast","getRewiews","getMovies","query","ReviewWrap","styled","useParams","useState","reviews","setReviews","totalResults","length","useEffect","alert","getAllRewiews","map","review","author","content"],"sourceRoot":""}