{"version":3,"file":"static/js/720.f3a72ddf.chunk.js","mappings":"8SACMA,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAEMC,EAAY,mCAAG,6FACpBC,EADoB,sCACiBH,GADjB,SAEHC,EAAAA,GAAAA,IAAUE,GAFP,cAEpBC,EAFoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qDAOZC,EAAY,mCAAG,WAAMC,GAAN,gFACpBL,EADoB,iBACJK,EADI,oBACUR,GADV,SAEHC,EAAAA,GAAAA,IAAUE,GAFP,cAEpBC,EAFoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZI,EAAQ,mCAAG,WAAMD,GAAN,gFAChBL,EADgB,iBACAK,EADA,4BACsBR,GADtB,SAECC,EAAAA,GAAAA,IAAUE,GAFX,cAEhBC,EAFgB,yBAIfA,EAASC,KAAKK,MAJC,2CAAH,sDAORC,EAAU,mCAAG,WAAMH,GAAN,gFAClBL,EADkB,iBACFK,EADE,4BACoBR,GADpB,SAEDC,EAAAA,GAAAA,IAAUE,GAFT,cAElBC,EAFkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVO,EAAS,mCAAG,WAAMC,GAAN,gFACjBV,EADiB,gCACcH,EADd,kBAC+Ba,EAD/B,uDAGAZ,EAAAA,GAAAA,IAAUE,GAHV,cAGjBC,EAHiB,yBAKhBA,EAASC,MALO,2CAAH,qD,uFChCTS,GAAaC,E,OAAAA,IAAOC,EAAAA,GAAPD,CAAH,sJ,SCCVE,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAUG,KAAI,SAAAC,GACb,OACE,yBACE,SAACR,EAAD,CAAYS,GAAE,kBAAaD,EAAKd,IAAMgB,MAAO,CAAEC,KAAMN,GAArD,SACGG,EAAKI,SAFDJ,EAAKd,GAMjB,KAGN,C,kKClBYmB,EAAYZ,EAAAA,GAAAA,IAAH,0C,SCCTa,EAAOb,EAAAA,GAAAA,KAAH,kEAKJc,EAAQd,EAAAA,GAAAA,MAAH,sIAQLe,EAASf,EAAAA,GAAAA,OAAH,mP,IAaOA,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sJ,QCzBVgB,EAAa,WAExB,OAA6BC,EAAAA,EAAAA,IAAgB,IAA7C,eAAUC,GAAV,WACA,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAYA,OACE,UAACR,EAAD,CAAMS,SAPa,SAAAC,GACnBA,EAAEC,iBACFN,EAAgB,CAAEpB,MAAOsB,IACzBC,EAAe,GAChB,EAGC,WACE,SAACP,EAAD,CAAOW,KAAK,OAAOC,KAAK,QAAQC,MAAOP,EAAaQ,SAZvC,SAAAC,GACfR,EAAeQ,EAAMC,OAAOH,MAC7B,KAWG,SAACZ,EAAD,CAAQU,KAAK,SAAb,sBAGL,ECgBD,EAlCe,WACb,OAAuBR,EAAAA,EAAAA,IAAgB,IAAhCc,GAAP,eACA,GAAwCZ,EAAAA,EAAAA,UAAS,IAAjD,eAAOa,EAAP,KAAqBC,EAArB,KAEMnC,EAAQiC,EAAaG,IAAI,SAoB/B,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gGAESrC,EAFT,kEAK2BD,EAAAA,EAAAA,IAAUC,GALrC,QAKUT,EALV,SAQM4C,EAAgB5C,EAASE,SAR/B,sJADc,uBAAC,WAAD,wBAed6C,CAAatC,EACd,GAAE,CAACA,KAGF,2BACE,UAACc,EAAD,YACE,SAACI,EAAD,IACCgB,IAAgB,SAAC9B,EAAA,EAAD,CAAWC,UAAW6B,QAI9C,C","sources":["API.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '5dfa5b901aee38fd7ab0c698d7fb5f4c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const PER_PAGE = 12;\n\nexport const getTrandings = async () => {\n  const url = `/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data.results;\n};\n\nexport const getMovieInfo = async id => {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data;\n};\n\nexport const getCasts = async id => {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data.cast;\n};\n\nexport const getRewiews = async id => {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const url = `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n\n  const response = await axios.get(url);\n\n  return response.data;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledLink } from './MovieList.styled';\n\nexport const MovieList = ({ movieList }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movieList.map(item => {\n        return (\n          <li key={item.id}>\n            <StyledLink to={`/movies/${item.id}`} state={{ from: location }}>\n              {item.title}\n            </StyledLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const MovieWrap = styled.div`\n  padding: 24px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin: 0;\n  padding: 2px 8px;\n  border: 1px solid #66666650;\n  border-radius: 6px;\n  font-size: 24px;\n`;\n\nexport const Button = styled.button`\n  background-color: #e7e7e7;\n  color: black;\n  border: none;\n  border-radius: 6px;\n  height: 34px;\n  padding: 0 16px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, Input, Button } from './SearchForm.styled';\n\nexport const SearchForm = () => {\n  // eslint-disable-next-line\n  const [_, setSearchParams] = useSearchParams('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const onChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n    setSearchQuery('');\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Input type=\"text\" name=\"query\" value={searchQuery} onChange={onChange} />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n","import { getMovies } from 'API';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieWrap } from './Movies.styled';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams('');\n  const [findedMovies, setFindedMovies] = useState('');\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    async function searchMovies() {\n      try {\n        if (!query) {\n          return;\n        }\n        const response = await getMovies(query);\n\n        if (response) {\n          setFindedMovies(response.results);\n        }\n      } catch {\n      } finally {\n      }\n    }\n    searchMovies(query);\n  }, [query]);\n\n  return (\n    <main>\n      <MovieWrap>\n        <SearchForm />\n        {findedMovies && <MovieList movieList={findedMovies} />}\n      </MovieWrap>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","getTrandings","url","response","data","results","getMovieInfo","id","getCasts","cast","getRewiews","getMovies","query","StyledLink","styled","Link","MovieList","movieList","location","useLocation","map","item","to","state","from","title","MovieWrap","Form","Input","Button","SearchForm","useSearchParams","setSearchParams","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","type","name","value","onChange","event","target","searchParams","findedMovies","setFindedMovies","get","useEffect","searchMovies"],"sourceRoot":""}