{"version":3,"file":"static/js/485.d8dcbb4b.chunk.js","mappings":"8SACMA,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAEMC,EAAY,mCAAG,6FACpBC,EADoB,sCACiBH,GADjB,SAEHC,EAAAA,GAAAA,IAAUE,GAFP,cAEpBC,EAFoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qDAOZC,EAAY,mCAAG,WAAMC,GAAN,gFACpBL,EADoB,iBACJK,EADI,oBACUR,GADV,SAEHC,EAAAA,GAAAA,IAAUE,GAFP,cAEpBC,EAFoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZI,EAAQ,mCAAG,WAAMD,GAAN,gFAChBL,EADgB,iBACAK,EADA,4BACsBR,GADtB,SAECC,EAAAA,GAAAA,IAAUE,GAFX,cAEhBC,EAFgB,yBAIfA,EAASC,KAAKK,MAJC,2CAAH,sDAORC,EAAU,mCAAG,WAAMH,GAAN,gFAClBL,EADkB,iBACFK,EADE,4BACoBR,GADpB,SAEDC,EAAAA,GAAAA,IAAUE,GAFT,cAElBC,EAFkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVO,EAAS,mCAAG,WAAMC,GAAN,gFACjBV,EADiB,gCACcH,EADd,kBAC+Ba,EAD/B,uDAGAZ,EAAAA,GAAAA,IAAUE,GAHV,cAGjBC,EAHiB,yBAKhBA,EAASC,MALO,2CAAH,qD,uFChCTS,GAAaC,E,OAAAA,IAAOC,EAAAA,GAAPD,CAAH,sJ,SCCVE,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAUG,KAAI,SAAAC,GACb,OACE,yBACE,SAACR,EAAD,CAAYS,GAAE,kBAAaD,EAAKd,IAAMgB,MAAO,CAAEC,KAAMN,GAArD,SACGG,EAAKI,SAFDJ,EAAKd,GAMjB,KAGN,C,iJClBYmB,E,OAAaZ,GAAAA,IAAH,0C,SCgCvB,EA5Ba,WACX,OAA4Ba,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2B7B,EAAAA,EAAAA,MAF3B,QAEUE,EAFV,SAIM0B,EAAU1B,GAJhB,gDAOI4B,MAAM,mCAPV,sGADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,KAGD,2BACE,UAACN,EAAD,YACE,4CACA,SAACV,EAAA,EAAD,CAAWC,UAAWW,QAI7B,C","sources":["API.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '5dfa5b901aee38fd7ab0c698d7fb5f4c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const PER_PAGE = 12;\n\nexport const getTrandings = async () => {\n  const url = `/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data.results;\n};\n\nexport const getMovieInfo = async id => {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data;\n};\n\nexport const getCasts = async id => {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data.cast;\n};\n\nexport const getRewiews = async id => {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const url = `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n\n  const response = await axios.get(url);\n\n  return response.data;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledLink } from './MovieList.styled';\n\nexport const MovieList = ({ movieList }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movieList.map(item => {\n        return (\n          <li key={item.id}>\n            <StyledLink to={`/movies/${item.id}`} state={{ from: location }}>\n              {item.title}\n            </StyledLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const TrendsWrap = styled.div`\n  padding: 24px;\n`;\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getTrandings } from '../../API';\nimport { TrendsWrap } from './Home.styled';\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n\n  useEffect(() => {\n    async function getTrends() {\n      try {\n        const response = await getTrandings();\n        if (response) {\n          setTrends(response);\n        }\n      } catch {\n        alert('Something went wrong. Try again');\n      } finally {\n      }\n    }\n    getTrends();\n  }, []);\n\n  return (\n    <main>\n      <TrendsWrap>\n        <h1>Trending Today</h1>\n        <MovieList movieList={trends} />\n      </TrendsWrap>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","axios","getTrandings","url","response","data","results","getMovieInfo","id","getCasts","cast","getRewiews","getMovies","query","StyledLink","styled","Link","MovieList","movieList","location","useLocation","map","item","to","state","from","title","TrendsWrap","useState","trends","setTrends","useEffect","alert","getTrends"],"sourceRoot":""}